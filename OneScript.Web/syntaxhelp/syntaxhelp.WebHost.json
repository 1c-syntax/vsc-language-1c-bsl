{
  "structureMenu": {
    "global": {
      "Методы настройки приложения": {
        "ИспользоватьОбработчикОшибок": "",
        "ИспользоватьСтатическиеФайлы": "",
        "ИспользоватьМаршруты": "",
        "ИспользоватьСессии": "",
        "ИспользоватьАвторизацию": "",
        "ИспользоватьФоновыеЗадания": ""
      },
      "Обработчики событий": {
        "ПриНачалеРаботыСистемы": "",
        "ПриРегистрацииКонтроллеров": "",
        "ПриРегистрацииКомпонентовПредставлений": ""
      }
    },
    "classes": {
      "Настройка приложения": {
        "КоллекцияМаршрутов": "",
        "ОписаниеМаршрута": "",
        "ПараметрыCookie": ""
      },
      "Контроллер и формирование ответа": {
        "Контроллер": "",
        "HttpЗапросВходящий": "",
        "HttpОтветИсходящий": "",
        "КоллекцияФайловФормы": "",
        "ФайлФормы": "",
        "КоллекцияДанныхФормы": "",
        "СессияHttp": "",
        "СостояниеМодели": "",
        "Посредник": ""
      },
      "Взаимодействие с базами данных": {
        "Запрос": "",
        "СоединениеИнформационнойБазы": "",
        "РезультатЗапроса": ""
      },
      "Формирование ответа": {
        "РезультатДействияСодержимое": "",
        "РезультатДействияФайл": "",
        "РезультатДействияПеренаправление": "",
        "РезультатДействияКодСостояния": "",
        "РезультатДействияПредставление": "",
        "СловарьДанныхПредставления": ""
      },
      "Компоненты представления": {
        "КомпонентПредставления": "",
        "РезультатКомпонентаСодержимое": "",
        "РезультатКомпонентаПредставление": ""
      },
      "Пользователи ИБ": {
        "ПользовательИнформационнойБазы": "",
        "МенеджерПользователейИнформационнойБазы": ""
      },
      "Регламентные и фоновые задания": {
        "ФоновоеЗадание": "",
        "МенеджерФоновыхЗаданий": "",
        "РасписаниеФоновыхЗаданий": "",
        "МенеджерРегламентныхЗаданий": "",
        "ПараметрыОжиданияФоновыхЗаданий": ""
      },
      "Прочее": ""
    }
  },
  "globalhandlers": {
    "ПриНачалеРаботыСистемы": {
      "name": "ПриНачалеРаботыСистемы",
      "description": "Запускается при старте сервера. В процедуре должен быть настроен конвейер обработки вызовов с помощью методов \"ИспользоватьХ()\" (см. ниже)",
      "signature": {
        "default": {
          "СтрокаПараметров": "()",
          "Параметры": {}
        }
      }
    },
    "ПриРегистрацииКонтроллеров": {
      "name": "ПриРегистрацииКонтроллеров",
      "description": "Обработчик вызывается при поиске файлов реализации контроллеров. Позволяет переопределить список загружаемых контроллеров приложения.",
      "signature": {
        "default": {
          "СтрокаПараметров": "(ИменаФайлов?: Массив, СтандартнаяОбработка?: Булево)",
          "Параметры": {
            "ИменаФайлов": "Массив. Имена файлов, загружаемые, как контроллеры",
            "СтандартнаяОбработка": "Булево. Если установлено в Ложь, то стандартный алгоритм поиска контроллеров выполняться не будет."
          }
        }
      }
    },
    "ПриРегистрацииКомпонентовПредставлений": {
      "name": "ПриРегистрацииКомпонентовПредставлений",
      "description": "Обработчик вызывается при поиске файлов реализации компонентов представлений. Позволяет переопределить список загружаемых компонентов представлений.",
      "signature": {
        "default": {
          "СтрокаПараметров": "(ИменаФайлов?: Массив, СтандартнаяОбработка?: Булево)",
          "Параметры": {
            "ИменаФайлов": "Массив. Имена файлов, загружаемые, как компоненты представлений",
            "СтандартнаяОбработка": "Булево. Если установлено в Ложь, то стандартный алгоритм поиска компонентов выполняться не будет."
          }
        }
      }
    }
  },
  "globalfunctions": {
    "ИспользоватьОбработчикОшибок": {
      "name": "ИспользоватьОбработчикОшибок",
      "name_en": "UseErrorHandler",
      "description": "Добавляет компонент конвейера, отвечающий за обработку исключений",
      "signature": {
        "default": {
          "СтрокаПараметров": "(errorRoute: Строка)",
          "Параметры": {
            "errorRoute": "Маршрут URL, который будет отображаться при возникновении исключения"
          }
        }
      }
    },
    "ИспользоватьСтатическиеФайлы": {
      "name": "ИспользоватьСтатическиеФайлы",
      "name_en": "UseStaticFiles",
      "description": "Добавляет компонент конвейера, отвечающий за выдачу статического содержимого (картинок, скриптов, стилей и т.п.)",
      "signature": {
        "default": {
          "СтрокаПараметров": "()",
          "Параметры": {}
        }
      }
    },
    "ИспользоватьМаршруты": {
      "name": "ИспользоватьМаршруты",
      "name_en": "UseMvcRoutes",
      "description": "Добавляет компонент конвейера, отвечающий за обработку MVC-маршрутов, контроллеры и представления. По умолчанию добавляется маршрут /{controller=home}/{action=index}/{id?}. В метод можно передать имя процедуры-обработчика, в которой можно будет перенастроить шаблоны URL.",
      "signature": {
        "default": {
          "СтрокаПараметров": "(handler?: Строка)",
          "Параметры": {
            "handler": "Имя процедуры-обработчика, в которой будет настраиваться маршрутизация."
          }
        }
      }
    },
    "ИспользоватьПосредника": {
      "name": "ИспользоватьПосредника",
      "name_en": "UseMiddleware",
      "description": "Добавляет middleware в конвейер. В метод нужно передать имя файла скрипта относительно /app, в котором лежит обработчик middleware.",
      "signature": {
        "default": {
          "СтрокаПараметров": "(scriptName: Строка)",
          "Параметры": {
            "scriptName": "Имя скрипта-обработчика, который будет вызываться."
          }
        }
      }
    },
    "ИспользоватьСессии": {
      "name": "ИспользоватьСессии",
      "name_en": "UseSessions",
      "description": "Использовать обработчик cookies, отвечающих за клиентские сессии. Позволяет применять http-сессии в контроллерах.",
      "signature": {
        "default": {
          "СтрокаПараметров": "()",
          "Параметры": {}
        }
      }
    },
    "ИспользоватьАвторизацию": {
      "name": "ИспользоватьАвторизацию",
      "name_en": "UseAuthorization",
      "description": "Использовать обработчик cookies, отвечающих за клиентскую аутентификацию.",
      "signature": {
        "default": {
          "СтрокаПараметров": "()",
          "Параметры": {}
        }
      }
    },
    "ИспользоватьФоновыеЗадания": {
      "name": "ИспользоватьФоновыеЗадания",
      "name_en": "UseBackgroundJobs",
      "description": "Разрешает использование фоновых и регламентных заданий. Запускает сервер обслуживания заданий Hangfire.",
      "signature": {
        "default": {
          "СтрокаПараметров": "()",
          "Параметры": {}
        }
      }
    },
    "ИспользоватьСжатиеОтветов": {
      "name": "ИспользоватьСжатиеОтветов",
      "name_en": "UseResponseCompression",
      "signature": {
        "default": {
          "СтрокаПараметров": "()",
          "Параметры": {}
        }
      }
    }
  },
  "classes": {
    "Запрос": {
      "name": "Запрос",
      "name_en": "Query",
      "description": "Запрос к информационной базе. Используется только если создана конфигурация соединения с ИБ",
      "properties": {
        "Параметры": {
          "name": "Параметры",
          "name_en": "Parameters",
          "access": "Чтение"
        },
        "Текст": {
          "name": "Текст",
          "name_en": "Text",
          "description": "Содержит исходный текст выполняемого запроса.",
          "value": "Строка",
          "access": "Чтение/Запись"
        }
      },
      "methods": {
        "Выполнить": {
          "name": "Выполнить",
          "name_en": "Execute",
          "description": "Выполняет запрос к базе данных.",
          "returns": "РезультатЗапроса",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): РезультатЗапроса",
              "Параметры": {}
            }
          }
        },
        "ВыполнитьКоманду": {
          "name": "ВыполнитьКоманду",
          "name_en": "ExecuteCommand",
          "description": "Выполняет запрос на модификацию к базе данных.",
          "returns": "Число - Число обработанных строк.",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): Число",
              "Параметры": {}
            }
          }
        },
        "УстановитьПараметр": {
          "name": "УстановитьПараметр",
          "name_en": "SetParameter",
          "description": "Устанавливает параметр запроса. Параметры доступны для обращения в тексте запроса.  С помощью этого метода можно передавать переменные в запрос, например, для использования в условиях запроса. ВАЖНО: В запросе имя параметра указывается с использованием '@'.",
          "example": "Запрос.Текст = \"select * from mytable where category_id = @category_id\";<br>Запрос.УстановитьПараметр(\"category_id\", 1);",
          "signature": {
            "default": {
              "СтрокаПараметров": "(parametrName: Строка, parametrValue: Произвольный)",
              "Параметры": {
                "parametrName": "Строка - Имя параметра",
                "parametrValue": "Произвольный - Значение параметра"
              }
            }
          }
        }
      }
    },
    "СоединениеИнформационнойБазы": {
      "name": "СоединениеИнформационнойБазы",
      "name_en": "InfobaseConnection",
      "description": "Обертка соединения с информационной базой",
      "methods": {
        "НовыйЗапрос": {
          "name": "НовыйЗапрос",
          "name_en": "NewQuery",
          "description": "Создает новый запрос к базе данных",
          "returns": "Запрос.",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): Запрос",
              "Параметры": {}
            }
          }
        }
      }
    },
    "ПользовательИнформационнойБазы": {
      "name": "ПользовательИнформационнойБазы",
      "name_en": "InfobaseUser",
      "properties": {
        "УникальныйИдентификатор": {
          "name": "УникальныйИдентификатор",
          "name_en": "UUID",
          "access": "Чтение/Запись"
        },
        "Имя": {
          "name": "Имя",
          "name_en": "Name",
          "access": "Чтение/Запись"
        },
        "СохраняемоеЗначениеПароля": {
          "name": "СохраняемоеЗначениеПароля",
          "name_en": "StoredPasswordValue",
          "access": "Чтение"
        },
        "Пароль": {
          "name": "Пароль",
          "name_en": "Password",
          "access": "Чтение/Запись"
        },
        "ЭлектроннаяПочта": {
          "name": "ЭлектроннаяПочта",
          "name_en": "Email",
          "access": "Чтение/Запись"
        }
      },
      "methods": {
        "Записать": {
          "name": "Записать",
          "name_en": "Write",
          "signature": {
            "default": {
              "СтрокаПараметров": "()",
              "Параметры": {}
            }
          }
        },
        "Удалить": {
          "name": "Удалить",
          "name_en": "Delete",
          "signature": {
            "default": {
              "СтрокаПараметров": "()",
              "Параметры": {}
            }
          }
        }
      }
    },
    "МенеджерПользователейИнформационнойБазы": {
      "name": "МенеджерПользователейИнформационнойБазы",
      "name_en": "InfoBaseUsersManager",
      "methods": {
        "ПолучитьПользователей": {
          "name": "ПолучитьПользователей",
          "name_en": "GetUsers",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): Массив",
              "Параметры": {}
            }
          }
        },
        "СоздатьПользователя": {
          "name": "СоздатьПользователя",
          "name_en": "CreateUser",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): ПользовательИнформационнойБазы",
              "Параметры": {}
            }
          }
        },
        "НайтиПоИмени": {
          "name": "НайтиПоИмени",
          "name_en": "FindByName",
          "signature": {
            "default": {
              "СтрокаПараметров": "(name: Строка): Произвольный",
              "Параметры": {}
            }
          }
        },
        "НайтиПоУникальномуИдентификатору": {
          "name": "НайтиПоУникальномуИдентификатору",
          "name_en": "FindByUUID",
          "signature": {
            "default": {
              "СтрокаПараметров": "(uuid: Строка): Произвольный",
              "Параметры": {}
            }
          }
        },
        "ТекущийПользователь": {
          "name": "ТекущийПользователь",
          "name_en": "CurrentUser",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): Произвольный",
              "Параметры": {}
            }
          }
        },
        "АвторизоватьПоПаролю": {
          "name": "АвторизоватьПоПаролю",
          "name_en": "AuthorizeByPassword",
          "signature": {
            "default": {
              "СтрокаПараметров": "(user: ПользовательИнформационнойБазы, password: Строка, remember?: Булево): Булево",
              "Параметры": {}
            }
          }
        },
        "СброситьАутентификацию": {
          "name": "СброситьАутентификацию",
          "name_en": "ResetAuthorization",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): Булево",
              "Параметры": {}
            }
          }
        }
      }
    },
    "РезультатЗапроса": {
      "name": "РезультатЗапроса",
      "name_en": "QueryResult",
      "description": "Содержит результат выполнения запроса. Предназначен для хранения и обработки полученных данных.",
      "methods": {
        "Выгрузить": {
          "name": "Выгрузить",
          "name_en": "Unload",
          "description": "Создает таблицу значений и копирует в нее все записи набора.",
          "returns": "ТаблицаЗначений",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): ТаблицаЗначений",
              "Параметры": {}
            }
          }
        },
        "Пустой": {
          "name": "Пустой",
          "name_en": "IsEmpty",
          "description": "Возвращает Истина, если в результате запроса нет ни одной записи.",
          "returns": "Булево",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): Булево",
              "Параметры": {}
            }
          }
        }
      }
    },
    "ФоновоеЗадание": {
      "name": "ФоновоеЗадание",
      "name_en": "BackgroundJob"
    },
    "МенеджерФоновыхЗаданий": {
      "name": "МенеджерФоновыхЗаданий",
      "name_en": "BackgroundJobsManager",
      "methods": {
        "Выполнить": {
          "name": "Выполнить",
          "name_en": "Execute",
          "description": "Выполняет заданный метод в фоновом режиме. Метод должен располагаться в общем модуле и быть экспортным. Параметры метода в текущей версии не поддерживаются.",
          "signature": {
            "default": {
              "СтрокаПараметров": "(method: Строка): ФоновоеЗадание",
              "Параметры": {}
            }
          }
        },
        "ОжидатьЗавершения": {
          "name": "ОжидатьЗавершения",
          "name_en": "WaitForCompletion",
          "signature": {
            "default": {
              "СтрокаПараметров": "()",
              "Параметры": {}
            }
          }
        }
      }
    },
    "РасписаниеФоновыхЗаданий": {
      "name": "РасписаниеФоновыхЗаданий",
      "name_en": "CronWrapper",
      "properties": {
        "РасписаниеСтрокой": {
          "name": "РасписаниеСтрокой",
          "name_en": "CronString",
          "access": "Чтение/Запись"
        }
      },
      "constructors": {
        "По умолчанию": {
          "name": "По умолчанию",
          "signature": "()"
        }
      },
      "methods": {
        "КаждыйДень": {
          "name": "КаждыйДень",
          "name_en": "Daily",
          "signature": {
            "default": {
              "СтрокаПараметров": "()",
              "Параметры": {}
            }
          }
        },
        "КаждыйДеньВИнтервале": {
          "name": "КаждыйДеньВИнтервале",
          "name_en": "DayInterval",
          "signature": {
            "default": {
              "СтрокаПараметров": "(interval: Число)",
              "Параметры": {}
            }
          }
        },
        "КаждыйЧас": {
          "name": "КаждыйЧас",
          "name_en": "Hourly",
          "signature": {
            "default": {
              "СтрокаПараметров": "()",
              "Параметры": {}
            }
          }
        },
        "КаждыйЧасВИнтервале": {
          "name": "КаждыйЧасВИнтервале",
          "name_en": "HourInterval",
          "signature": {
            "default": {
              "СтрокаПараметров": "(interval: Число)",
              "Параметры": {}
            }
          }
        },
        "КаждуюМинуту": {
          "name": "КаждуюМинуту",
          "name_en": "Minutely",
          "signature": {
            "default": {
              "СтрокаПараметров": "()",
              "Параметры": {}
            }
          }
        },
        "КаждуюМинутуВИнтервале": {
          "name": "КаждуюМинутуВИнтервале",
          "name_en": "MinuteInterval",
          "signature": {
            "default": {
              "СтрокаПараметров": "(interval: Число)",
              "Параметры": {}
            }
          }
        },
        "КаждыйМесяц": {
          "name": "КаждыйМесяц",
          "name_en": "Monthly",
          "signature": {
            "default": {
              "СтрокаПараметров": "()",
              "Параметры": {}
            }
          }
        },
        "КаждыйГод": {
          "name": "КаждыйГод",
          "name_en": "Yearly",
          "signature": {
            "default": {
              "СтрокаПараметров": "()",
              "Параметры": {}
            }
          }
        },
        "КаждуюНеделю": {
          "name": "КаждуюНеделю",
          "name_en": "Weekly",
          "signature": {
            "default": {
              "СтрокаПараметров": "()",
              "Параметры": {}
            }
          }
        }
      }
    },
    "МенеджерРегламентныхЗаданий": {
      "name": "МенеджерРегламентныхЗаданий",
      "name_en": "ScheduledJobsManager",
      "methods": {
        "ВыполнитьОтложенноеЗадание": {
          "name": "ВыполнитьОтложенноеЗадание",
          "name_en": "RunSheduledTask",
          "signature": {
            "default": {
              "СтрокаПараметров": "(module: Строка, method: Строка, sheduler: ПараметрыОжиданияФоновыхЗаданий): Строка",
              "Параметры": {}
            }
          }
        },
        "СоздатьПериодическоеЗаданиеПоРасписанию": {
          "name": "СоздатьПериодическоеЗаданиеПоРасписанию",
          "name_en": "CreateRecurringSheduledTask",
          "signature": {
            "default": {
              "СтрокаПараметров": "(module: Строка, method: Строка, cron: РасписаниеФоновыхЗаданий)",
              "Параметры": {}
            }
          }
        },
        "УдалитьПериодическоеЗаданиеПоРасписанию": {
          "name": "УдалитьПериодическоеЗаданиеПоРасписанию",
          "name_en": "RemoveRecurringSheduledTask",
          "signature": {
            "default": {
              "СтрокаПараметров": "(taskId: Строка)",
              "Параметры": {}
            }
          }
        },
        "ВыполнитьПринудительноПериодическоеЗаданиеПоРасписанию": {
          "name": "ВыполнитьПринудительноПериодическоеЗаданиеПоРасписанию",
          "name_en": "TriggerRecurringSheduledTask",
          "signature": {
            "default": {
              "СтрокаПараметров": "(taskId: Строка)",
              "Параметры": {}
            }
          }
        },
        "ПолучитьИдентификаторыПериодическихЗаданий": {
          "name": "ПолучитьИдентификаторыПериодическихЗаданий",
          "name_en": "GetRecurringJobsIDs",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): Массив",
              "Параметры": {}
            }
          }
        },
        "ВыполнитьПодчиненноеЗадание": {
          "name": "ВыполнитьПодчиненноеЗадание",
          "name_en": "RunContinuationsTask",
          "signature": {
            "default": {
              "СтрокаПараметров": "(TaskIDFrom: Строка, module: Строка, method: Строка)",
              "Параметры": {}
            }
          }
        }
      }
    },
    "ПараметрыОжиданияФоновыхЗаданий": {
      "name": "ПараметрыОжиданияФоновыхЗаданий",
      "name_en": "TimeSpanWrapper",
      "constructors": {
        "По умолчанию": {
          "name": "По умолчанию",
          "signature": "()"
        }
      },
      "methods": {
        "Ожидание": {
          "name": "Ожидание",
          "name_en": "TimeSpanFrom",
          "signature": {
            "default": {
              "СтрокаПараметров": "(days: Число, hours: Число, minutes: Число, seconds: Число, millisec: Число)",
              "Параметры": {}
            }
          }
        },
        "ОжиданиеВДнях": {
          "name": "ОжиданиеВДнях",
          "name_en": "TimeSpanFromDays",
          "signature": {
            "default": {
              "СтрокаПараметров": "(days: Число)",
              "Параметры": {}
            }
          }
        },
        "ОжиданиеВЧасах": {
          "name": "ОжиданиеВЧасах",
          "name_en": "TimeSpanFromHours",
          "signature": {
            "default": {
              "СтрокаПараметров": "(hours: Число)",
              "Параметры": {}
            }
          }
        },
        "ОжиданиеВМинутах": {
          "name": "ОжиданиеВМинутах",
          "name_en": "TimeSpanFromMinutes",
          "signature": {
            "default": {
              "СтрокаПараметров": "(minutes: Число)",
              "Параметры": {}
            }
          }
        },
        "ОжиданиеВСекундах": {
          "name": "ОжиданиеВСекундах",
          "name_en": "TimeSpanFromSecconds",
          "signature": {
            "default": {
              "СтрокаПараметров": "(seconds: Число)",
              "Параметры": {}
            }
          }
        },
        "ОжиданиеВМиллисекундах": {
          "name": "ОжиданиеВМиллисекундах",
          "name_en": "TimeSpanFromSMilliseconds",
          "signature": {
            "default": {
              "СтрокаПараметров": "(milliseconds: Число)",
              "Параметры": {}
            }
          }
        }
      }
    },
    "СессияHttp": {
      "name": "СессияHttp",
      "name_en": "HttpSession",
      "properties": {
        "Доступна": {
          "name": "Доступна",
          "name_en": "IsAvailable",
          "description": "Возвращает Истина, если пользовательская сессия была инициирована",
          "access": "Чтение"
        },
        "Идентификатор": {
          "name": "Идентификатор",
          "name_en": "Identifier",
          "description": "Идентификатор сессии",
          "access": "Чтение"
        }
      },
      "methods": {
        "ПолучитьКлючи": {
          "name": "ПолучитьКлючи",
          "name_en": "GetKeys",
          "description": "Метод получает набор ключей, сохраненных в сессии",
          "returns": "Массив ключей",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): Массив",
              "Параметры": {}
            }
          }
        },
        "ПолучитьСтроку": {
          "name": "ПолучитьСтроку",
          "name_en": "GetString",
          "description": "Получить строковое значение из сессии",
          "signature": {
            "default": {
              "СтрокаПараметров": "(key: Строка): Произвольный",
              "Параметры": {
                "key": "Ключ значения"
              }
            }
          }
        },
        "УстановитьСтроку": {
          "name": "УстановитьСтроку",
          "name_en": "SetString",
          "description": "Установить строковое значение в сессию",
          "signature": {
            "default": {
              "СтрокаПараметров": "(key: Строка, value: Строка)",
              "Параметры": {
                "key": "Ключ значения",
                "value": "Устанавливаемое значение"
              }
            }
          }
        },
        "ПолучитьЧисло": {
          "name": "ПолучитьЧисло",
          "name_en": "GetNumber",
          "description": "Получить числовое значение из сессии",
          "signature": {
            "default": {
              "СтрокаПараметров": "(key: Строка): Произвольный",
              "Параметры": {
                "key": "Ключ значения"
              }
            }
          }
        },
        "УстановитьЧисло": {
          "name": "УстановитьЧисло",
          "name_en": "SetNumber",
          "description": "Установить числовое значение в сессию",
          "signature": {
            "default": {
              "СтрокаПараметров": "(key: Строка, value: Число)",
              "Параметры": {
                "key": "Ключ значения",
                "value": "Устанавливаемое значение"
              }
            }
          }
        },
        "Очистить": {
          "name": "Очистить",
          "name_en": "Clear",
          "description": "Очистить все значения сессии",
          "signature": {
            "default": {
              "СтрокаПараметров": "()",
              "Параметры": {}
            }
          }
        },
        "Удалить": {
          "name": "Удалить",
          "name_en": "Remove",
          "description": "Удалить значение из сессии",
          "signature": {
            "default": {
              "СтрокаПараметров": "(key: Строка)",
              "Параметры": {
                "key": "Ключ значения"
              }
            }
          }
        }
      }
    },
    "РезультатДействияСодержимое": {
      "name": "РезультатДействияСодержимое",
      "name_en": "ContentActionResult",
      "properties": {
        "Содержимое": {
          "name": "Содержимое",
          "name_en": "Content",
          "access": "Чтение/Запись"
        },
        "ТипСодержимого": {
          "name": "ТипСодержимого",
          "name_en": "ContentType",
          "access": "Чтение/Запись"
        },
        "КодСостояния": {
          "name": "КодСостояния",
          "name_en": "StatusCode",
          "access": "Чтение/Запись"
        }
      },
      "constructors": {
        "По умолчанию": {
          "name": "По умолчанию",
          "signature": "()"
        }
      }
    },
    "ПараметрыCookie": {
      "name": "ПараметрыCookie",
      "name_en": "CookieOptionsWraper",
      "properties": {
        "Домен": {
          "name": "Домен",
          "name_en": "Domain",
          "access": "Чтение/Запись"
        },
        "Путь": {
          "name": "Путь",
          "name_en": "Path",
          "access": "Чтение/Запись"
        },
        "ТолькоДляHttp": {
          "name": "ТолькоДляHttp",
          "name_en": "HttpOnly",
          "access": "Чтение/Запись"
        },
        "БезопасныйРежим": {
          "name": "БезопасныйРежим",
          "name_en": "Secure",
          "access": "Чтение/Запись"
        }
      },
      "methods": {
        "УстановитьСрокДействия": {
          "name": "УстановитьСрокДействия",
          "name_en": "SetExpiration",
          "description": "Строка. Срок действия в формате .NET см. https://msdn.microsoft.com/ru-ru/library/bb351654(v=vs.110).aspx Устанавливает срок действия Cookie",
          "signature": {
            "default": {
              "СтрокаПараметров": "(offset: Произвольный)",
              "Параметры": {}
            }
          }
        }
      }
    },
    "РезультатДействияФайл": {
      "name": "РезультатДействияФайл",
      "name_en": "FileActionResult",
      "properties": {
        "ТипСодержимого": {
          "name": "ТипСодержимого",
          "name_en": "ContentType",
          "access": "Чтение/Запись"
        },
        "ИмяПолучаемогоФайла": {
          "name": "ИмяПолучаемогоФайла",
          "name_en": "DownloadFileName",
          "access": "Чтение/Запись"
        }
      },
      "constructors": {
        "По имени файла и типу данных": {
          "name": "По имени файла и типу данных",
          "signature": "(file: Строка, contentType: Строка)"
        },
        "По двоичным данным": {
          "name": "По двоичным данным",
          "signature": "(binaryData: ДвоичныеДанные, contentType: Строка)"
        }
      }
    },
    "КоллекцияДанныхФормы": {
      "name": "КоллекцияДанныхФормы",
      "name_en": "FormDataCollectionContext",
      "description": "Значения полей формы во входящем запросе. Обращения к полям формы выполняется с помощью оператора []. В качестве индекса используется имя поля.",
      "properties": {
        "Файлы": {
          "name": "Файлы",
          "name_en": "Files",
          "description": "Коллекция загружаемых файлов (upload)",
          "access": "Чтение"
        }
      },
      "methods": {
        "Количество": {
          "name": "Количество",
          "name_en": "Count",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): Число",
              "Параметры": {}
            }
          }
        }
      }
    },
    "ФайлФормы": {
      "name": "ФайлФормы",
      "name_en": "FormFileContext",
      "description": "Описание файла формы",
      "properties": {
        "Имя": {
          "name": "Имя",
          "name_en": "Name",
          "description": "Имя поля формы, в котором был получен данный файл",
          "access": "Чтение"
        },
        "ИмяФайла": {
          "name": "ИмяФайла",
          "name_en": "FileName",
          "description": "Имя переданного файла, как указано в заголовке Content-Disposition",
          "access": "Чтение"
        },
        "Размер": {
          "name": "Размер",
          "name_en": "Length",
          "access": "Чтение"
        },
        "Заголовки": {
          "name": "Заголовки",
          "name_en": "Headers",
          "description": "Заголовки данного файла.",
          "access": "Чтение"
        },
        "ТипСодержимого": {
          "name": "ТипСодержимого",
          "name_en": "ContentType",
          "description": "Значение заголовка Content-type для данного файла.",
          "access": "Чтение"
        },
        "РасположениеСодержимого": {
          "name": "РасположениеСодержимого",
          "name_en": "ContentDisposition",
          "description": "Значение заголовка Content-disposition для данного файла.",
          "access": "Чтение"
        }
      },
      "methods": {
        "ОткрытьПотокДляЧтения": {
          "name": "ОткрытьПотокДляЧтения",
          "name_en": "OpenReadStream",
          "description": "Открывает поток для чтения содержимого файла",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): Поток",
              "Параметры": {}
            }
          }
        }
      }
    },
    "КоллекцияФайловФормы": {
      "name": "КоллекцияФайловФормы",
      "name_en": "FormFilesCollectionContext",
      "description": "Коллекция переданных с клиента файлов. Обращение к коллекции возможно по числовому индексу или имени поля-файла.",
      "methods": {
        "Количество": {
          "name": "Количество",
          "name_en": "Count",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): Число",
              "Параметры": {}
            }
          }
        }
      }
    },
    "HttpЗапросВходящий": {
      "name": "HttpЗапросВходящий",
      "name_en": "HttpIncomingRequest",
      "description": "Описание входящего запроса HTTP",
      "properties": {
        "Заголовки": {
          "name": "Заголовки",
          "name_en": "Headers",
          "description": "ФиксированноеСоответствие. Заголовки входящего запроса",
          "access": "Чтение/Запись"
        },
        "Cookies": {
          "name": "Cookies",
          "name_en": "Cookies",
          "description": "ФиксированноеСоответствие. Cookies входящего запроса",
          "access": "Чтение/Запись"
        },
        "ДанныеФормы": {
          "name": "ДанныеФормы",
          "name_en": "FormData",
          "description": "Коллекция переменных, переданных в качестве данных формы",
          "access": "Чтение"
        },
        "Метод": {
          "name": "Метод",
          "name_en": "Method",
          "description": "Текущий метод HTTP",
          "access": "Чтение"
        },
        "СтрокаЗапроса": {
          "name": "СтрокаЗапроса",
          "name_en": "QueryString",
          "description": "Текущая строка запроса (QueryString)",
          "access": "Чтение"
        },
        "Путь": {
          "name": "Путь",
          "name_en": "Path",
          "description": "Путь текущего ресурса",
          "access": "Чтение"
        }
      },
      "methods": {
        "ПолучитьТелоКакПоток": {
          "name": "ПолучитьТелоКакПоток",
          "name_en": "GetBodyAsStream",
          "description": "Получение тела запроса в виде потока для чтения",
          "returns": "Поток",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): Поток",
              "Параметры": {}
            }
          }
        },
        "ПараметрыЗапроса": {
          "name": "ПараметрыЗапроса",
          "name_en": "QueryParameters",
          "description": "Коллекция параметров запроса (из СтрокиЗапроса)",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): Соответствие",
              "Параметры": {}
            }
          }
        }
      }
    },
    "HttpОтветИсходящий": {
      "name": "HttpОтветИсходящий",
      "name_en": "HttpOutgoingResponse",
      "description": "Описание исходящего HTTP-ответа",
      "properties": {
        "Заголовки": {
          "name": "Заголовки",
          "name_en": "Headers",
          "description": "Фиксированное соответствие. Заголовки исходящего запроса. Для установки заголовков см. метод УстановитьЗаголовки.",
          "access": "Чтение/Запись"
        },
        "КодСостояния": {
          "name": "КодСостояния",
          "name_en": "StatusCode",
          "description": "Возвращаемый код состояния.",
          "access": "Чтение/Запись"
        },
        "ТипСодержимого": {
          "name": "ТипСодержимого",
          "name_en": "ContentType",
          "description": "Возвращаемый тип содержимого (Content-type)",
          "access": "Чтение/Запись"
        },
        "ОтправкаНачата": {
          "name": "ОтправкаНачата",
          "name_en": "HasStarted",
          "description": "Показывает, была ли начата отправка ответа клиенту. Если да, то модификация ответа (установка тела или заголовков) приведёт к исключению.",
          "access": "Чтение"
        }
      },
      "methods": {
        "УстановитьЗаголовки": {
          "name": "УстановитьЗаголовки",
          "name_en": "SetHeaders",
          "description": "Устанавливает заголовки текущего ответа",
          "signature": {
            "default": {
              "СтрокаПараметров": "(headers: Соответствие)",
              "Параметры": {
                "headers": "Соответствие. Устанавливаемые заголовки"
              }
            }
          }
        },
        "УстановитьCookie": {
          "name": "УстановитьCookie",
          "name_en": "SetCookie",
          "description": "Добавляет значение Cookie в ответ",
          "signature": {
            "default": {
              "СтрокаПараметров": "(key: Строка, value: Строка, options?: ПараметрыCookie)",
              "Параметры": {
                "key": "Имя параметра",
                "value": "Значение параметра",
                "options": "Опции Cookie"
              }
            }
          }
        },
        "УдалитьCookie": {
          "name": "УдалитьCookie",
          "name_en": "RemoveCookie",
          "description": "Удаление значения Cookie",
          "signature": {
            "default": {
              "СтрокаПараметров": "(key: Строка, options?: ПараметрыCookie)",
              "Параметры": {
                "key": "Имя параметра",
                "options": "Опции Cookie"
              }
            }
          }
        },
        "ПолучитьТелоКакПоток": {
          "name": "ПолучитьТелоКакПоток",
          "name_en": "GetBodyAsStream",
          "description": "Открывает Поток, применяемый для наполнения тела ответа.",
          "returns": "Поток",
          "signature": {
            "default": {
              "СтрокаПараметров": "(): Поток",
              "Параметры": {}
            }
          }
        },
        "УстановитьТелоИзСтроки": {
          "name": "УстановитьТелоИзСтроки",
          "name_en": "SetBodyFromString",
          "description": "Устанавливает тело ответа из строки с заданной кодировкой.",
          "signature": {
            "default": {
              "СтрокаПараметров": "(body: Строка, encoding?: Произвольный)",
              "Параметры": {
                "body": "Тело ответа",
                "encoding": "Кодировка текста ответа"
              }
            }
          }
        },
        "УстановитьТелоИзДвоичныхДанных": {
          "name": "УстановитьТелоИзДвоичныхДанных",
          "name_en": "SetBodyFromBinaryData",
          "description": "Устанавливает ДвоичныеДанные в качестве тела ответа",
          "signature": {
            "default": {
              "СтрокаПараметров": "(data: ДвоичныеДанные)",
              "Параметры": {
                "data": "Данные"
              }
            }
          }
        }
      }
    },
    "СостояниеМодели": {
      "name": "СостояниеМодели",
      "name_en": "ModelState",
      "properties": {
        "Корректно": {
          "name": "Корректно",
          "name_en": "IsValid",
          "access": "Чтение"
        }
      },
      "methods": {
        "ДобавитьОшибку": {
          "name": "ДобавитьОшибку",
          "name_en": "AddError",
          "signature": {
            "default": {
              "СтрокаПараметров": "(name: Строка, errorText: Строка)",
              "Параметры": {}
            }
          }
        },
        "Очистить": {
          "name": "Очистить",
          "name_en": "Clear",
          "signature": {
            "default": {
              "СтрокаПараметров": "()",
              "Параметры": {}
            }
          }
        }
      }
    },
    "РезультатДействияПеренаправление": {
      "name": "РезультатДействияПеренаправление",
      "name_en": "RedirectActionResult",
      "constructors": {
        "По умолчанию": {
          "name": "По умолчанию",
          "signature": "(url: Строка, permanent?: Булево)"
        }
      }
    },
    "ОписаниеМаршрута": {
      "name": "ОписаниеМаршрута",
      "name_en": "RouteDescription",
      "properties": {
        "Имя": {
          "name": "Имя",
          "name_en": "Name",
          "access": "Чтение/Запись"
        },
        "Шаблон": {
          "name": "Шаблон",
          "name_en": "Template",
          "access": "Чтение/Запись"
        },
        "ЗначенияПоУмолчанию": {
          "name": "ЗначенияПоУмолчанию",
          "name_en": "Defaults",
          "access": "Чтение/Запись"
        }
      }
    },
    "КоллекцияМаршрутов": {
      "name": "КоллекцияМаршрутов",
      "name_en": "RoutesCollection",
      "description": "Класс предназначен для описания URL-шаблонов, по которым будет откликаться веб-приложение. Пример шаблона с 3-мя переменными. Переменные controller и action являются предопределенными. /{controller}/{action}/{id?}",
      "methods": {
        "Добавить": {
          "name": "Добавить",
          "name_en": "Add",
          "description": "Добавление шаблона URL в коллекцию.",
          "example": "Умолчания = Новый Соответствие;<br>Умолчания.Вставить(\"shopId\", 12344); // если магазин не указан - взять магазин 12344<br>КоллекцияМаршрутов.Добавить(\"ПоМагазину\",\"{controller}/{action}/{shopId}\", Умолчания);",
          "signature": {
            "default": {
              "СтрокаПараметров": "(name: Строка, template: Строка, defaults?: Соответствие)",
              "Параметры": {
                "name": "Имя маршрута. Позволяет строить исходящие URL по заданному шаблону",
                "template": "Шаблон адреса. Формируется по правилам шаблонов ASP.NET MVC Core",
                "defaults": "Соответствие. Определяет значения по-умолчанию для переменных маршрута."
              }
            }
          }
        }
      }
    },
    "Контроллер": {
      "name": "Контроллер",
      "name_en": "ScriptedController",
      "description": "Главный класс, отвечающий за обработку входящего запроса и генерацию ответа.",
      "properties": {
        "ЗапросHttp": {
          "name": "ЗапросHttp",
          "name_en": "HttpRequest",
          "description": "Входящий запрос HTTP",
          "access": "Чтение"
        },
        "ОтветHttp": {
          "name": "ОтветHttp",
          "name_en": "HttpResponse",
          "description": "Исходящий ответ HTTP",
          "access": "Чтение"
        },
        "ЗначенияМаршрута": {
          "name": "ЗначенияМаршрута",
          "name_en": "RouteValues",
          "description": "Действующие значения маршрута для текущего вызова. Тип: Соответствие или Неопределено. Ключами соответствия являются переменные маршрута.",
          "access": "Чтение"
        },
        "Сессия": {
          "name": "Сессия",
          "name_en": "Session",
          "description": "Данные http-сессии. Механизм сессий использует Cookies для привязки сессии и InMemory хранилище для данных сессии.",
          "access": "Чтение"
        },
        "ДанныеПредставления": {
          "name": "ДанныеПредставления",
          "name_en": "ViewData",
          "description": "Специализированный объект, предназначенный для передачи данных в генерируемое Представление. Элементы коллекции доступны в Представлении через свойства ViewBag и ViewData.",
          "access": "Чтение/Запись"
        },
        "СостояниеМодели": {
          "name": "СостояниеМодели",
          "name_en": "ModelState",
          "access": "Чтение"
        }
      },
      "methods": {
        "Представление": {
          "name": "Представление",
          "name_en": "View",
          "description": "Вспомогательный метод генерации ответа в виде представления.",
          "returns": "РезультатДействияПредставление.",
          "signature": {
            "default": {
              "СтрокаПараметров": "(nameOrModel?: Произвольный, model?: Произвольный): РезультатДействияПредставление",
              "Параметры": {
                "nameOrModel": "Имя представления или объект Модели (если используется представление по умолчанию)",
                "model": "Объект модели (произвольный)"
              }
            }
          }
        },
        "Содержимое": {
          "name": "Содержимое",
          "name_en": "Content",
          "description": "Вспомогательный метод генерации ответа в виде текстового содержимого",
          "returns": "РезультатДействияСодержимое",
          "signature": {
            "default": {
              "СтрокаПараметров": "(content: Строка, contentType?: Строка): РезультатДействияСодержимое",
              "Параметры": {
                "content": "Содержимое ответа",
                "contentType": "Кодировка текста ответа"
              }
            }
          }
        },
        "Файл": {
          "name": "Файл",
          "name_en": "File",
          "description": "Вспомогательный метод генерации ответа в виде скачиваемого файла.",
          "returns": "РезультатДействияФайл",
          "signature": {
            "default": {
              "СтрокаПараметров": "(data: Произвольный, contentType?: Строка, downloadFileName?: Строка): РезультатДействияФайл",
              "Параметры": {
                "data": "Данные файла (путь или ДвоичныеДанные)",
                "contentType": "Содержимое заголовка Content-type",
                "downloadFileName": "Имя скачиваемого файла"
              }
            }
          }
        },
        "КодСостояния": {
          "name": "КодСостояния",
          "name_en": "StatusCode",
          "description": "Вспомогательный метод, генерирующий код состояния HTTP",
          "returns": "РезультатДействияКодСостояния",
          "signature": {
            "default": {
              "СтрокаПараметров": "(code: Число): РезультатДействияКодСостояния",
              "Параметры": {
                "code": "Код состояния"
              }
            }
          }
        },
        "Перенаправление": {
          "name": "Перенаправление",
          "name_en": "Redirect",
          "description": "Вспомогательный метод, генерирующий ответ в виде http-редиректа",
          "returns": "РезультатДействияПеренаправление",
          "signature": {
            "default": {
              "СтрокаПараметров": "(url: Строка, permanent?: Булево): РезультатДействияПеренаправление",
              "Параметры": {
                "url": "Адрес перенаправления",
                "permanent": "Признак постоянного (permanent) перенаправления."
              }
            }
          }
        },
        "ПеренаправлениеНаДействие": {
          "name": "ПеренаправлениеНаДействие",
          "name_en": "RedirectToAction",
          "description": "Вспомогательный метод, генерирующий ответ в виде http-редиректа",
          "returns": "РезультатДействияПеренаправление",
          "signature": {
            "default": {
              "СтрокаПараметров": "(action: Строка, controller?: Строка, fields?: Структура, permanent?: Булево): РезультатДействияПеренаправление",
              "Параметры": {
                "action": "Имя действия перенаправления",
                "controller": "Контроллер перенаправления",
                "fields": "Дополнительные поля",
                "permanent": "Признак постоянного (permanent) перенаправления."
              }
            }
          }
        },
        "АдресМаршрута": {
          "name": "АдресМаршрута",
          "name_en": "RouteUrl",
          "description": "Генерирует URL для маршрута, заданного в приложении. Параметр routeName позволяет жестко привязать генерацию адреса к конкретному маршруту",
          "returns": "РезультатДействияПеренаправление",
          "signature": {
            "default": {
              "СтрокаПараметров": "(routeName?: Строка, fields?: Структура): Строка",
              "Параметры": {
                "routeName": "Строка. Имя маршрута",
                "fields": "Структура. Поля маршрута в виде структуры."
              }
            }
          }
        },
        "АдресДействия": {
          "name": "АдресДействия",
          "name_en": "ActionUrl",
          "description": "Генерирует Url для действия в контроллере",
          "signature": {
            "default": {
              "СтрокаПараметров": "(action: Строка, fieldsOrController?: Произвольный): Строка",
              "Параметры": {
                "action": "Имя действия",
                "fieldsOrController": "Имя контроллера строкой или структура/соответствие полей маршрута."
              }
            }
          }
        }
      }
    },
    "Посредник": {
      "name": "Посредник",
      "name_en": "Middleware",
      "description": "Экземпляр посредника. Представлен произвольным скриптом в структуре приложения.",
      "properties": {
        "ЗапросHttp": {
          "name": "ЗапросHttp",
          "name_en": "HttpRequest",
          "description": "Входящий запрос HTTP",
          "access": "Чтение/Запись"
        },
        "ОтветHttp": {
          "name": "ОтветHttp",
          "name_en": "HttpResponse",
          "description": "Исходящий ответ HTTP",
          "access": "Чтение/Запись"
        }
      },
      "methods": {
        "ПродолжитьОбработку": {
          "name": "ПродолжитьОбработку",
          "name_en": "InvokeNext",
          "signature": {
            "default": {
              "СтрокаПараметров": "()",
              "Параметры": {}
            }
          }
        }
      }
    },
    "КомпонентПредставления": {
      "name": "КомпонентПредставления",
      "name_en": "ScriptedViewComponent",
      "properties": {
        "ЗапросHttp": {
          "name": "ЗапросHttp",
          "name_en": "HttpRequest",
          "description": "Входящий запрос HTTP",
          "access": "Чтение/Запись"
        },
        "ОтветHttp": {
          "name": "ОтветHttp",
          "name_en": "HttpResponse",
          "description": "Исходящий ответ HTTP",
          "access": "Чтение/Запись"
        },
        "ЗначенияМаршрута": {
          "name": "ЗначенияМаршрута",
          "name_en": "RouteValues",
          "description": "Действующие значения маршрута для текущего вызова. Тип: Соответствие или Неопределено. Ключами соответствия являются переменные маршрута.",
          "access": "Чтение/Запись"
        },
        "Сессия": {
          "name": "Сессия",
          "name_en": "Session",
          "description": "Данные http-сессии. Механизм сессий использует Cookies для привязки сессии и InMemory хранилище для данных сессии.",
          "access": "Чтение"
        },
        "ДанныеПредставления": {
          "name": "ДанныеПредставления",
          "name_en": "ViewData",
          "description": "Специализированный объект, предназначенный для передачи данных в генерируемое Представление. Элементы коллекции доступны в Представлении через свойства ViewBag и ViewData.",
          "access": "Чтение/Запись"
        }
      },
      "methods": {
        "АдресМаршрута": {
          "name": "АдресМаршрута",
          "name_en": "RouteUrl",
          "description": "Генерирует URL для маршрута, заданного в приложении. Параметр routeName позволяет жестко привязать генерацию адреса к конкретному маршруту",
          "returns": "РезультатДействияПеренаправление",
          "signature": {
            "default": {
              "СтрокаПараметров": "(routeName?: Строка, fields?: Структура): Строка",
              "Параметры": {
                "routeName": "Строка. Имя маршрута",
                "fields": "Структура. Поля маршрута в виде структуры."
              }
            }
          }
        },
        "АдресДействия": {
          "name": "АдресДействия",
          "name_en": "ActionUrl",
          "description": "Генерирует Url для действия в контроллере",
          "signature": {
            "default": {
              "СтрокаПараметров": "(action: Строка, fieldsOrController?: Произвольный): Строка",
              "Параметры": {
                "action": "Имя действия",
                "fieldsOrController": "Имя контроллера строкой или структура полей маршрута."
              }
            }
          }
        },
        "Представление": {
          "name": "Представление",
          "name_en": "View",
          "description": "Вспомогательный метод генерации ответа в виде представления.",
          "returns": "РезультатКомпонентаПредставление.",
          "signature": {
            "default": {
              "СтрокаПараметров": "(nameOrModel?: Произвольный, model?: Произвольный): РезультатКомпонентаПредставление",
              "Параметры": {
                "nameOrModel": "Имя представления или объект Модели (если используется представление по умолчанию)",
                "model": "Объект модели (произвольный)"
              }
            }
          }
        }
      }
    },
    "РезультатДействияКодСостояния": {
      "name": "РезультатДействияКодСостояния",
      "name_en": "StatusCodeActionResult",
      "constructors": {
        "По умолчанию": {
          "name": "По умолчанию",
          "signature": "(statusCode: Число)"
        }
      }
    },
    "РезультатДействияПредставление": {
      "name": "РезультатДействияПредставление",
      "name_en": "ViewActionResult",
      "properties": {
        "ИмяШаблона": {
          "name": "ИмяШаблона",
          "name_en": "ViewName",
          "access": "Чтение/Запись"
        },
        "ТипСодержимого": {
          "name": "ТипСодержимого",
          "name_en": "ContentType",
          "access": "Чтение/Запись"
        },
        "КодСостояния": {
          "name": "КодСостояния",
          "name_en": "StatusCode",
          "access": "Чтение/Запись"
        },
        "ДанныеПредставления": {
          "name": "ДанныеПредставления",
          "name_en": "ViewData",
          "access": "Чтение/Запись"
        }
      },
      "constructors": {
        "По умолчанию": {
          "name": "По умолчанию",
          "signature": "()"
        }
      }
    },
    "РезультатКомпонентаСодержимое": {
      "name": "РезультатКомпонентаСодержимое",
      "name_en": "ViewComponentContentResult",
      "properties": {
        "Содержимое": {
          "name": "Содержимое",
          "name_en": "Content",
          "access": "Чтение/Запись"
        }
      },
      "constructors": {
        "По умолчанию": {
          "name": "По умолчанию",
          "signature": "(content: Произвольный)"
        }
      }
    },
    "РезультатКомпонентаПредставление": {
      "name": "РезультатКомпонентаПредставление",
      "name_en": "ViewComponentViewResult",
      "properties": {
        "ИмяШаблона": {
          "name": "ИмяШаблона",
          "name_en": "ViewName",
          "access": "Чтение/Запись"
        },
        "ДанныеПредставления": {
          "name": "ДанныеПредставления",
          "name_en": "ViewData",
          "access": "Чтение/Запись"
        }
      },
      "constructors": {
        "По умолчанию": {
          "name": "По умолчанию",
          "signature": "()"
        }
      }
    },
    "СловарьДанныхПредставления": {
      "name": "СловарьДанныхПредставления",
      "name_en": "ViewDataDictionaryWrapper",
      "properties": {
        "Модель": {
          "name": "Модель",
          "name_en": "Model",
          "access": "Чтение/Запись"
        }
      },
      "constructors": {
        "По умолчанию": {
          "name": "По умолчанию",
          "signature": "()"
        }
      }
    }
  },
  "systemEnum": {}
}